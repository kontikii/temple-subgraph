// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MintComplete extends ethereum.Event {
  get params(): MintComplete__Params {
    return new MintComplete__Params(this);
  }
}

export class MintComplete__Params {
  _event: MintComplete;

  constructor(event: MintComplete) {
    this._event = event;
  }

  get minter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get acceptedStablec(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mintedTemple(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bonusTemple(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get mintedOGTemple(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StakeComplete extends ethereum.Event {
  get params(): StakeComplete__Params {
    return new StakeComplete__Params(this);
  }
}

export class StakeComplete__Params {
  _event: StakeComplete;

  constructor(event: StakeComplete) {
    this._event = event;
  }

  get staker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get acceptedTemple(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bonusTemple(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get mintedOGTemple(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VerifiedUserAdded extends ethereum.Event {
  get params(): VerifiedUserAdded__Params {
    return new VerifiedUserAdded__Params(this);
  }
}

export class VerifiedUserAdded__Params {
  _event: VerifiedUserAdded;

  constructor(event: VerifiedUserAdded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OpeningCeremony__guestBonusFactorResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OpeningCeremony__limitStablecResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class OpeningCeremony__limitTempleResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class OpeningCeremony__usersResult {
  value0: boolean;
  value1: boolean;
  value2: i32;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: i32,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class OpeningCeremony__verifiedBonusFactorResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OpeningCeremony extends ethereum.SmartContract {
  static bind(address: Address): OpeningCeremony {
    return new OpeningCeremony("OpeningCeremony", address);
  }

  CAN_ADD_VERIFIED_USER(): Bytes {
    let result = super.call(
      "CAN_ADD_VERIFIED_USER",
      "CAN_ADD_VERIFIED_USER():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CAN_ADD_VERIFIED_USER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CAN_ADD_VERIFIED_USER",
      "CAN_ADD_VERIFIED_USER():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  globalDoublingIndex(): BigInt {
    let result = super.call(
      "globalDoublingIndex",
      "globalDoublingIndex():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_globalDoublingIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "globalDoublingIndex",
      "globalDoublingIndex():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  guestBonusFactor(): OpeningCeremony__guestBonusFactorResult {
    let result = super.call(
      "guestBonusFactor",
      "guestBonusFactor():(uint256,uint256)",
      []
    );

    return new OpeningCeremony__guestBonusFactorResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_guestBonusFactor(): ethereum.CallResult<
    OpeningCeremony__guestBonusFactorResult
  > {
    let result = super.tryCall(
      "guestBonusFactor",
      "guestBonusFactor():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OpeningCeremony__guestBonusFactorResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  harvestThresholdStablec(): BigInt {
    let result = super.call(
      "harvestThresholdStablec",
      "harvestThresholdStablec():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_harvestThresholdStablec(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "harvestThresholdStablec",
      "harvestThresholdStablec():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  inviteThresholdStablec(): BigInt {
    let result = super.call(
      "inviteThresholdStablec",
      "inviteThresholdStablec():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_inviteThresholdStablec(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "inviteThresholdStablec",
      "inviteThresholdStablec():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastUpdatedTimestamp(): BigInt {
    let result = super.call(
      "lastUpdatedTimestamp",
      "lastUpdatedTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastUpdatedTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastUpdatedTimestamp",
      "lastUpdatedTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  limitStablec(): OpeningCeremony__limitStablecResult {
    let result = super.call(
      "limitStablec",
      "limitStablec():(uint256,uint256,uint256)",
      []
    );

    return new OpeningCeremony__limitStablecResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_limitStablec(): ethereum.CallResult<OpeningCeremony__limitStablecResult> {
    let result = super.tryCall(
      "limitStablec",
      "limitStablec():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OpeningCeremony__limitStablecResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  limitTemple(): OpeningCeremony__limitTempleResult {
    let result = super.call(
      "limitTemple",
      "limitTemple():(uint256,uint256,uint256)",
      []
    );

    return new OpeningCeremony__limitTempleResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_limitTemple(): ethereum.CallResult<OpeningCeremony__limitTempleResult> {
    let result = super.tryCall(
      "limitTemple",
      "limitTemple():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OpeningCeremony__limitTempleResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  lockedOGTemple(): Address {
    let result = super.call("lockedOGTemple", "lockedOGTemple():(address)", []);

    return result[0].toAddress();
  }

  try_lockedOGTemple(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "lockedOGTemple",
      "lockedOGTemple():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxInvitesPerVerifiedUser(): BigInt {
    let result = super.call(
      "maxInvitesPerVerifiedUser",
      "maxInvitesPerVerifiedUser():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxInvitesPerVerifiedUser(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxInvitesPerVerifiedUser",
      "maxInvitesPerVerifiedUser():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxSacrificableStablec(doublingIndexAtVerification: BigInt): BigInt {
    let result = super.call(
      "maxSacrificableStablec",
      "maxSacrificableStablec(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(doublingIndexAtVerification)]
    );

    return result[0].toBigInt();
  }

  try_maxSacrificableStablec(
    doublingIndexAtVerification: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxSacrificableStablec",
      "maxSacrificableStablec(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(doublingIndexAtVerification)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintMultiple(): BigInt {
    let result = super.call("mintMultiple", "mintMultiple():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mintMultiple(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mintMultiple", "mintMultiple():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  stablecToken(): Address {
    let result = super.call("stablecToken", "stablecToken():(address)", []);

    return result[0].toAddress();
  }

  try_stablecToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("stablecToken", "stablecToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  staking(): Address {
    let result = super.call("staking", "staking():(address)", []);

    return result[0].toAddress();
  }

  try_staking(): ethereum.CallResult<Address> {
    let result = super.tryCall("staking", "staking():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  templeToken(): Address {
    let result = super.call("templeToken", "templeToken():(address)", []);

    return result[0].toAddress();
  }

  try_templeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("templeToken", "templeToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasuryManagement(): Address {
    let result = super.call(
      "treasuryManagement",
      "treasuryManagement():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_treasuryManagement(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "treasuryManagement",
      "treasuryManagement():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  unlockDelaySeconds(): BigInt {
    let result = super.call(
      "unlockDelaySeconds",
      "unlockDelaySeconds():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_unlockDelaySeconds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unlockDelaySeconds",
      "unlockDelaySeconds():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  users(param0: Address): OpeningCeremony__usersResult {
    let result = super.call(
      "users",
      "users(address):(bool,bool,uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new OpeningCeremony__usersResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_users(
    param0: Address
  ): ethereum.CallResult<OpeningCeremony__usersResult> {
    let result = super.tryCall(
      "users",
      "users(address):(bool,bool,uint8,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OpeningCeremony__usersResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  verifiedBonusFactor(): OpeningCeremony__verifiedBonusFactorResult {
    let result = super.call(
      "verifiedBonusFactor",
      "verifiedBonusFactor():(uint256,uint256)",
      []
    );

    return new OpeningCeremony__verifiedBonusFactorResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_verifiedBonusFactor(): ethereum.CallResult<
    OpeningCeremony__verifiedBonusFactorResult
  > {
    let result = super.tryCall(
      "verifiedBonusFactor",
      "verifiedBonusFactor():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OpeningCeremony__verifiedBonusFactorResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _stablecToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _templeToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _staking(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _lockedOGTemple(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _treasury(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _treasuryManagement(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _harvestThresholdStablec(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _inviteThresholdStablec(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _maxInvitesPerVerifiedUser(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _verifiedBonusFactor(): ConstructorCall_verifiedBonusFactorStruct {
    return this._call.inputValues[9].value.toTuple() as ConstructorCall_verifiedBonusFactorStruct;
  }

  get _guestBonusFactor(): ConstructorCall_guestBonusFactorStruct {
    return this._call.inputValues[10].value.toTuple() as ConstructorCall_guestBonusFactorStruct;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_verifiedBonusFactorStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class ConstructorCall_guestBonusFactorStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class AddGuestUserCall extends ethereum.Call {
  get inputs(): AddGuestUserCall__Inputs {
    return new AddGuestUserCall__Inputs(this);
  }

  get outputs(): AddGuestUserCall__Outputs {
    return new AddGuestUserCall__Outputs(this);
  }
}

export class AddGuestUserCall__Inputs {
  _call: AddGuestUserCall;

  constructor(call: AddGuestUserCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddGuestUserCall__Outputs {
  _call: AddGuestUserCall;

  constructor(call: AddGuestUserCall) {
    this._call = call;
  }
}

export class AddVerifiedUserCall extends ethereum.Call {
  get inputs(): AddVerifiedUserCall__Inputs {
    return new AddVerifiedUserCall__Inputs(this);
  }

  get outputs(): AddVerifiedUserCall__Outputs {
    return new AddVerifiedUserCall__Outputs(this);
  }
}

export class AddVerifiedUserCall__Inputs {
  _call: AddVerifiedUserCall;

  constructor(call: AddVerifiedUserCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddVerifiedUserCall__Outputs {
  _call: AddVerifiedUserCall;

  constructor(call: AddVerifiedUserCall) {
    this._call = call;
  }
}

export class AddVerifierCall extends ethereum.Call {
  get inputs(): AddVerifierCall__Inputs {
    return new AddVerifierCall__Inputs(this);
  }

  get outputs(): AddVerifierCall__Outputs {
    return new AddVerifierCall__Outputs(this);
  }
}

export class AddVerifierCall__Inputs {
  _call: AddVerifierCall;

  constructor(call: AddVerifierCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddVerifierCall__Outputs {
  _call: AddVerifierCall;

  constructor(call: AddVerifierCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MintAndStakeCall extends ethereum.Call {
  get inputs(): MintAndStakeCall__Inputs {
    return new MintAndStakeCall__Inputs(this);
  }

  get outputs(): MintAndStakeCall__Outputs {
    return new MintAndStakeCall__Outputs(this);
  }
}

export class MintAndStakeCall__Inputs {
  _call: MintAndStakeCall;

  constructor(call: MintAndStakeCall) {
    this._call = call;
  }

  get _amountPaidStablec(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintAndStakeCall__Outputs {
  _call: MintAndStakeCall;

  constructor(call: MintAndStakeCall) {
    this._call = call;
  }
}

export class MintAndStakeForCall extends ethereum.Call {
  get inputs(): MintAndStakeForCall__Inputs {
    return new MintAndStakeForCall__Inputs(this);
  }

  get outputs(): MintAndStakeForCall__Outputs {
    return new MintAndStakeForCall__Outputs(this);
  }
}

export class MintAndStakeForCall__Inputs {
  _call: MintAndStakeForCall;

  constructor(call: MintAndStakeForCall) {
    this._call = call;
  }

  get _staker(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amountPaidStablec(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintAndStakeForCall__Outputs {
  _call: MintAndStakeForCall;

  constructor(call: MintAndStakeForCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveVerifierCall extends ethereum.Call {
  get inputs(): RemoveVerifierCall__Inputs {
    return new RemoveVerifierCall__Inputs(this);
  }

  get outputs(): RemoveVerifierCall__Outputs {
    return new RemoveVerifierCall__Outputs(this);
  }
}

export class RemoveVerifierCall__Inputs {
  _call: RemoveVerifierCall;

  constructor(call: RemoveVerifierCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveVerifierCall__Outputs {
  _call: RemoveVerifierCall;

  constructor(call: RemoveVerifierCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetGuestBonusFactorCall extends ethereum.Call {
  get inputs(): SetGuestBonusFactorCall__Inputs {
    return new SetGuestBonusFactorCall__Inputs(this);
  }

  get outputs(): SetGuestBonusFactorCall__Outputs {
    return new SetGuestBonusFactorCall__Outputs(this);
  }
}

export class SetGuestBonusFactorCall__Inputs {
  _call: SetGuestBonusFactorCall;

  constructor(call: SetGuestBonusFactorCall) {
    this._call = call;
  }

  get _numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetGuestBonusFactorCall__Outputs {
  _call: SetGuestBonusFactorCall;

  constructor(call: SetGuestBonusFactorCall) {
    this._call = call;
  }
}

export class SetHarvestThresholdCall extends ethereum.Call {
  get inputs(): SetHarvestThresholdCall__Inputs {
    return new SetHarvestThresholdCall__Inputs(this);
  }

  get outputs(): SetHarvestThresholdCall__Outputs {
    return new SetHarvestThresholdCall__Outputs(this);
  }
}

export class SetHarvestThresholdCall__Inputs {
  _call: SetHarvestThresholdCall;

  constructor(call: SetHarvestThresholdCall) {
    this._call = call;
  }

  get _harvestThresholdStablec(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetHarvestThresholdCall__Outputs {
  _call: SetHarvestThresholdCall;

  constructor(call: SetHarvestThresholdCall) {
    this._call = call;
  }
}

export class SetInviteThresholdCall extends ethereum.Call {
  get inputs(): SetInviteThresholdCall__Inputs {
    return new SetInviteThresholdCall__Inputs(this);
  }

  get outputs(): SetInviteThresholdCall__Outputs {
    return new SetInviteThresholdCall__Outputs(this);
  }
}

export class SetInviteThresholdCall__Inputs {
  _call: SetInviteThresholdCall;

  constructor(call: SetInviteThresholdCall) {
    this._call = call;
  }

  get _inviteThresholdStablec(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetInviteThresholdCall__Outputs {
  _call: SetInviteThresholdCall;

  constructor(call: SetInviteThresholdCall) {
    this._call = call;
  }
}

export class SetLimitStablecCall extends ethereum.Call {
  get inputs(): SetLimitStablecCall__Inputs {
    return new SetLimitStablecCall__Inputs(this);
  }

  get outputs(): SetLimitStablecCall__Outputs {
    return new SetLimitStablecCall__Outputs(this);
  }
}

export class SetLimitStablecCall__Inputs {
  _call: SetLimitStablecCall;

  constructor(call: SetLimitStablecCall) {
    this._call = call;
  }

  get guestMax(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get verifiedMax(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get verifiedDayOne(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetLimitStablecCall__Outputs {
  _call: SetLimitStablecCall;

  constructor(call: SetLimitStablecCall) {
    this._call = call;
  }
}

export class SetLimitTempleCall extends ethereum.Call {
  get inputs(): SetLimitTempleCall__Inputs {
    return new SetLimitTempleCall__Inputs(this);
  }

  get outputs(): SetLimitTempleCall__Outputs {
    return new SetLimitTempleCall__Outputs(this);
  }
}

export class SetLimitTempleCall__Inputs {
  _call: SetLimitTempleCall;

  constructor(call: SetLimitTempleCall) {
    this._call = call;
  }

  get guestMax(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get verifiedMax(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetLimitTempleCall__Outputs {
  _call: SetLimitTempleCall;

  constructor(call: SetLimitTempleCall) {
    this._call = call;
  }
}

export class SetMaxInvitesPerVerifiedUserCall extends ethereum.Call {
  get inputs(): SetMaxInvitesPerVerifiedUserCall__Inputs {
    return new SetMaxInvitesPerVerifiedUserCall__Inputs(this);
  }

  get outputs(): SetMaxInvitesPerVerifiedUserCall__Outputs {
    return new SetMaxInvitesPerVerifiedUserCall__Outputs(this);
  }
}

export class SetMaxInvitesPerVerifiedUserCall__Inputs {
  _call: SetMaxInvitesPerVerifiedUserCall;

  constructor(call: SetMaxInvitesPerVerifiedUserCall) {
    this._call = call;
  }

  get _maxInvitesPerVerifiedUser(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxInvitesPerVerifiedUserCall__Outputs {
  _call: SetMaxInvitesPerVerifiedUserCall;

  constructor(call: SetMaxInvitesPerVerifiedUserCall) {
    this._call = call;
  }
}

export class SetMintMultipleCall extends ethereum.Call {
  get inputs(): SetMintMultipleCall__Inputs {
    return new SetMintMultipleCall__Inputs(this);
  }

  get outputs(): SetMintMultipleCall__Outputs {
    return new SetMintMultipleCall__Outputs(this);
  }
}

export class SetMintMultipleCall__Inputs {
  _call: SetMintMultipleCall;

  constructor(call: SetMintMultipleCall) {
    this._call = call;
  }

  get _mintMultiple(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintMultipleCall__Outputs {
  _call: SetMintMultipleCall;

  constructor(call: SetMintMultipleCall) {
    this._call = call;
  }
}

export class SetUnlockDelayCall extends ethereum.Call {
  get inputs(): SetUnlockDelayCall__Inputs {
    return new SetUnlockDelayCall__Inputs(this);
  }

  get outputs(): SetUnlockDelayCall__Outputs {
    return new SetUnlockDelayCall__Outputs(this);
  }
}

export class SetUnlockDelayCall__Inputs {
  _call: SetUnlockDelayCall;

  constructor(call: SetUnlockDelayCall) {
    this._call = call;
  }

  get _unlockDelaySeconds(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetUnlockDelayCall__Outputs {
  _call: SetUnlockDelayCall;

  constructor(call: SetUnlockDelayCall) {
    this._call = call;
  }
}

export class SetVerifiedBonusFactorCall extends ethereum.Call {
  get inputs(): SetVerifiedBonusFactorCall__Inputs {
    return new SetVerifiedBonusFactorCall__Inputs(this);
  }

  get outputs(): SetVerifiedBonusFactorCall__Outputs {
    return new SetVerifiedBonusFactorCall__Outputs(this);
  }
}

export class SetVerifiedBonusFactorCall__Inputs {
  _call: SetVerifiedBonusFactorCall;

  constructor(call: SetVerifiedBonusFactorCall) {
    this._call = call;
  }

  get _numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetVerifiedBonusFactorCall__Outputs {
  _call: SetVerifiedBonusFactorCall;

  constructor(call: SetVerifiedBonusFactorCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get _amountTemple(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class StakeForCall extends ethereum.Call {
  get inputs(): StakeForCall__Inputs {
    return new StakeForCall__Inputs(this);
  }

  get outputs(): StakeForCall__Outputs {
    return new StakeForCall__Outputs(this);
  }
}

export class StakeForCall__Inputs {
  _call: StakeForCall;

  constructor(call: StakeForCall) {
    this._call = call;
  }

  get _staker(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amountTemple(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StakeForCall__Outputs {
  _call: StakeForCall;

  constructor(call: StakeForCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
