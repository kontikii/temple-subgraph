// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class HarvestDistributed extends ethereum.Event {
  get params(): HarvestDistributed__Params {
    return new HarvestDistributed__Params(this);
  }
}

export class HarvestDistributed__Params {
  _event: HarvestDistributed;

  constructor(event: HarvestDistributed) {
    this._event = event;
  }

  get _contract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardsHarvested extends ethereum.Event {
  get params(): RewardsHarvested__Params {
    return new RewardsHarvested__Params(this);
  }
}

export class RewardsHarvested__Params {
  _event: RewardsHarvested;

  constructor(event: RewardsHarvested) {
    this._event = event;
  }

  get _amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TempleTreasury__intrinsicValueRatioResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TempleTreasury extends ethereum.SmartContract {
  static bind(address: Address): TempleTreasury {
    return new TempleTreasury("TempleTreasury", address);
  }

  MINT_ALLOWANCE(): Address {
    let result = super.call("MINT_ALLOWANCE", "MINT_ALLOWANCE():(address)", []);

    return result[0].toAddress();
  }

  try_MINT_ALLOWANCE(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "MINT_ALLOWANCE",
      "MINT_ALLOWANCE():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  harvestedRewardsTemple(): BigInt {
    let result = super.call(
      "harvestedRewardsTemple",
      "harvestedRewardsTemple():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_harvestedRewardsTemple(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "harvestedRewardsTemple",
      "harvestedRewardsTemple():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  intrinsicValueRatio(): TempleTreasury__intrinsicValueRatioResult {
    let result = super.call(
      "intrinsicValueRatio",
      "intrinsicValueRatio():(uint256,uint256)",
      []
    );

    return new TempleTreasury__intrinsicValueRatioResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_intrinsicValueRatio(): ethereum.CallResult<
    TempleTreasury__intrinsicValueRatioResult
  > {
    let result = super.tryCall(
      "intrinsicValueRatio",
      "intrinsicValueRatio():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TempleTreasury__intrinsicValueRatioResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  numPools(): BigInt {
    let result = super.call("numPools", "numPools():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numPools(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numPools", "numPools():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolHarvestShare(param0: Address): BigInt {
    let result = super.call(
      "poolHarvestShare",
      "poolHarvestShare(address):(uint96)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_poolHarvestShare(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolHarvestShare",
      "poolHarvestShare(address):(uint96)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pools(param0: BigInt): Address {
    let result = super.call("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pools(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("pools", "pools(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  seeded(): boolean {
    let result = super.call("seeded", "seeded():(bool)", []);

    return result[0].toBoolean();
  }

  try_seeded(): ethereum.CallResult<boolean> {
    let result = super.tryCall("seeded", "seeded():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalAllocationStablec(): BigInt {
    let result = super.call(
      "totalAllocationStablec",
      "totalAllocationStablec():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalAllocationStablec(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAllocationStablec",
      "totalAllocationStablec():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalHarvestShares(): BigInt {
    let result = super.call(
      "totalHarvestShares",
      "totalHarvestShares():(uint96)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalHarvestShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalHarvestShares",
      "totalHarvestShares():(uint96)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  treasuryAllocationsStablec(param0: Address): BigInt {
    let result = super.call(
      "treasuryAllocationsStablec",
      "treasuryAllocationsStablec(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_treasuryAllocationsStablec(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "treasuryAllocationsStablec",
      "treasuryAllocationsStablec(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _TEMPLE(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _STABLEC(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AllocateTreasuryStablecCall extends ethereum.Call {
  get inputs(): AllocateTreasuryStablecCall__Inputs {
    return new AllocateTreasuryStablecCall__Inputs(this);
  }

  get outputs(): AllocateTreasuryStablecCall__Outputs {
    return new AllocateTreasuryStablecCall__Outputs(this);
  }
}

export class AllocateTreasuryStablecCall__Inputs {
  _call: AllocateTreasuryStablecCall;

  constructor(call: AllocateTreasuryStablecCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountStablec(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AllocateTreasuryStablecCall__Outputs {
  _call: AllocateTreasuryStablecCall;

  constructor(call: AllocateTreasuryStablecCall) {
    this._call = call;
  }
}

export class DistributeHarvestCall extends ethereum.Call {
  get inputs(): DistributeHarvestCall__Inputs {
    return new DistributeHarvestCall__Inputs(this);
  }

  get outputs(): DistributeHarvestCall__Outputs {
    return new DistributeHarvestCall__Outputs(this);
  }
}

export class DistributeHarvestCall__Inputs {
  _call: DistributeHarvestCall;

  constructor(call: DistributeHarvestCall) {
    this._call = call;
  }
}

export class DistributeHarvestCall__Outputs {
  _call: DistributeHarvestCall;

  constructor(call: DistributeHarvestCall) {
    this._call = call;
  }
}

export class EjectTreasuryAllocationCall extends ethereum.Call {
  get inputs(): EjectTreasuryAllocationCall__Inputs {
    return new EjectTreasuryAllocationCall__Inputs(this);
  }

  get outputs(): EjectTreasuryAllocationCall__Outputs {
    return new EjectTreasuryAllocationCall__Outputs(this);
  }
}

export class EjectTreasuryAllocationCall__Inputs {
  _call: EjectTreasuryAllocationCall;

  constructor(call: EjectTreasuryAllocationCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EjectTreasuryAllocationCall__Outputs {
  _call: EjectTreasuryAllocationCall;

  constructor(call: EjectTreasuryAllocationCall) {
    this._call = call;
  }
}

export class HarvestCall extends ethereum.Call {
  get inputs(): HarvestCall__Inputs {
    return new HarvestCall__Inputs(this);
  }

  get outputs(): HarvestCall__Outputs {
    return new HarvestCall__Outputs(this);
  }
}

export class HarvestCall__Inputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }

  get distributionPercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class HarvestCall__Outputs {
  _call: HarvestCall;

  constructor(call: HarvestCall) {
    this._call = call;
  }
}

export class MintAndAllocateTempleCall extends ethereum.Call {
  get inputs(): MintAndAllocateTempleCall__Inputs {
    return new MintAndAllocateTempleCall__Inputs(this);
  }

  get outputs(): MintAndAllocateTempleCall__Outputs {
    return new MintAndAllocateTempleCall__Outputs(this);
  }
}

export class MintAndAllocateTempleCall__Inputs {
  _call: MintAndAllocateTempleCall;

  constructor(call: MintAndAllocateTempleCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountTemple(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintAndAllocateTempleCall__Outputs {
  _call: MintAndAllocateTempleCall;

  constructor(call: MintAndAllocateTempleCall) {
    this._call = call;
  }
}

export class RemovePoolCall extends ethereum.Call {
  get inputs(): RemovePoolCall__Inputs {
    return new RemovePoolCall__Inputs(this);
  }

  get outputs(): RemovePoolCall__Outputs {
    return new RemovePoolCall__Outputs(this);
  }
}

export class RemovePoolCall__Inputs {
  _call: RemovePoolCall;

  constructor(call: RemovePoolCall) {
    this._call = call;
  }

  get idx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _contract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemovePoolCall__Outputs {
  _call: RemovePoolCall;

  constructor(call: RemovePoolCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ResetIVCall extends ethereum.Call {
  get inputs(): ResetIVCall__Inputs {
    return new ResetIVCall__Inputs(this);
  }

  get outputs(): ResetIVCall__Outputs {
    return new ResetIVCall__Outputs(this);
  }
}

export class ResetIVCall__Inputs {
  _call: ResetIVCall;

  constructor(call: ResetIVCall) {
    this._call = call;
  }
}

export class ResetIVCall__Outputs {
  _call: ResetIVCall;

  constructor(call: ResetIVCall) {
    this._call = call;
  }
}

export class SeedMintCall extends ethereum.Call {
  get inputs(): SeedMintCall__Inputs {
    return new SeedMintCall__Inputs(this);
  }

  get outputs(): SeedMintCall__Outputs {
    return new SeedMintCall__Outputs(this);
  }
}

export class SeedMintCall__Inputs {
  _call: SeedMintCall;

  constructor(call: SeedMintCall) {
    this._call = call;
  }

  get amountStablec(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountTemple(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SeedMintCall__Outputs {
  _call: SeedMintCall;

  constructor(call: SeedMintCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnallocateAndBurnUnusedMintedTempleCall extends ethereum.Call {
  get inputs(): UnallocateAndBurnUnusedMintedTempleCall__Inputs {
    return new UnallocateAndBurnUnusedMintedTempleCall__Inputs(this);
  }

  get outputs(): UnallocateAndBurnUnusedMintedTempleCall__Outputs {
    return new UnallocateAndBurnUnusedMintedTempleCall__Outputs(this);
  }
}

export class UnallocateAndBurnUnusedMintedTempleCall__Inputs {
  _call: UnallocateAndBurnUnusedMintedTempleCall;

  constructor(call: UnallocateAndBurnUnusedMintedTempleCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnallocateAndBurnUnusedMintedTempleCall__Outputs {
  _call: UnallocateAndBurnUnusedMintedTempleCall;

  constructor(call: UnallocateAndBurnUnusedMintedTempleCall) {
    this._call = call;
  }
}

export class UpdateMarkToMarketCall extends ethereum.Call {
  get inputs(): UpdateMarkToMarketCall__Inputs {
    return new UpdateMarkToMarketCall__Inputs(this);
  }

  get outputs(): UpdateMarkToMarketCall__Outputs {
    return new UpdateMarkToMarketCall__Outputs(this);
  }
}

export class UpdateMarkToMarketCall__Inputs {
  _call: UpdateMarkToMarketCall;

  constructor(call: UpdateMarkToMarketCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateMarkToMarketCall__Outputs {
  _call: UpdateMarkToMarketCall;

  constructor(call: UpdateMarkToMarketCall) {
    this._call = call;
  }
}

export class UpsertPoolCall extends ethereum.Call {
  get inputs(): UpsertPoolCall__Inputs {
    return new UpsertPoolCall__Inputs(this);
  }

  get outputs(): UpsertPoolCall__Outputs {
    return new UpsertPoolCall__Outputs(this);
  }
}

export class UpsertPoolCall__Inputs {
  _call: UpsertPoolCall;

  constructor(call: UpsertPoolCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _poolHarvestShare(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpsertPoolCall__Outputs {
  _call: UpsertPoolCall;

  constructor(call: UpsertPoolCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
